}
glimpse(data_ex)
data_ex %>% summarise(meanAge = mean(na.exclude(age)))
gender_distribution = count(data_ex, gender)
gender_distribution$n =  gender_distribution$n / 245
print(c("Age range: ", range(na.exclude(data_ex$age))))
participants = nrow(data) / 245
participants_valid = nrow(data_ex) / 245
print(gender_distribution)
print(c("Total number of participants: ", participants))
print(c("Number of valid participants: ", participants_valid))
d = filter(data_ex, trialName %in% c("ratingScaleLike",
"ratingScaleDetect")) %>%
select(submissionID, trialName, pictureNumber, artist, date, response, color, color2) %>%
spread(key = trialName, value = response)
d$ratingScaleLike <- as.numeric(d$ratingScaleLike)
d$ratingScaleDetect <- as.numeric(d$ratingScaleDetect)
d = rename(d, detectability = ratingScaleDetect, liking = ratingScaleLike)
glimpse(d)
d_tibble <- as_tibble(d)
print(d_tibble)
ggplot(d, aes(x = detectability, y = liking, group = submissionID)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Detectability", y = "Liking")
ggplot(d, aes(x = detectability, y = liking)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Detectability", y = "Liking")
ggplot(d, aes(x = detectability, y = liking, group = detectability)) + geom_boxplot() + labs(x = "Detectability", y = "Liking")
d %>% group_by(liking) %>% summarise(meanDetect = mean(detectability))
d %>% group_by(artist) %>% summarise(meanLike = mean(liking), meanDetect = mean(detectability))
d %>% group_by(detectability) %>% summarise(meanLike = mean(liking))
d %>% group_by(artist) %>% summarise(meanLike = mean(liking), meanDetect = mean(detectability))
ggplot(d, aes(x = detectability, y = liking, fill = color2)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Detectability", y = "Liking", title = "Different colors", fill = "Color")
ggplot(d, aes(x = as.factor(detectability), y = liking, fill = color2)) + geom_boxplot() + labs(x = "Detectability", y = "Liking", title = "Different colors", fill = "Color")
ggplot(d, aes(x = detectability, y = liking, fill = artist)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Detectability", y = "Liking", title = "Different artists", fill = "Artist")
ggplot(d, aes(x = as.factor(detectability), y = liking, fill = artist)) + geom_boxplot()  + labs(x = "Detectability", y = "Liking", title = "Different artists", fill = "Artist")
d = mutate(d,
liking = factor(liking, ordered = T),
detectability = factor(detectability, ordered = T),
color = factor(color),
color2 = factor(color2),
artist = factor(artist)
)
glimpse(d)
cor(as.numeric(d$liking), as.numeric(d$detectability))
raw_data = read_csv("results60.csv")
glimpse(raw_data)
data = rename(raw_data,
submissionID = `submission_id`,
trialName = `trial_name`
)
glimpse(data)
data = select(data, submissionID, trialName,
response, pictureNumber, artist, date,
age, gender, timeSpent, color, color2)
glimpse(data)
data_ex <- data
for(i in 1:(nrow(data) / 245)) {
# colorVisionTest1
if(data[((i - 1)*245 + 1), ]$response != "74") {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 1), ]$submissionID)
# colorVisionTest2
} else if(data[((i - 1)*245 + 2), ]$response != "7") {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 2), ]$submissionID)
# visionTest
} else if(data[((i - 1)*245 + 3), ]$response != "FELOPZD") {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 3), ]$submissionID)
# expertise
} else if(as.integer(data[((i - 1)*245 + 244), ]$response) > 5) {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 244), ]$submissionID)
# time spent
} else if(data[((i - 1)*245 + 1), ]$timeSpent < 5) {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 1), ]$submissionID)
# exclude participants that took part in the course Experimental Psychology Lab
} else if(data[((i - 1)*245 + 245), ]$response == "Yes") {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 245), ]$submissionID)
}
}
glimpse(data_ex)
data_ex %>% summarise(meanAge = mean(na.exclude(age)))
gender_distribution = count(data_ex, gender)
gender_distribution$n =  gender_distribution$n / 245
print(c("Age range: ", range(na.exclude(data_ex$age))))
participants = nrow(data) / 245
participants_valid = nrow(data_ex) / 245
print(gender_distribution)
print(c("Total number of participants: ", participants))
print(c("Number of valid participants: ", participants_valid))
d = filter(data_ex, trialName %in% c("ratingScaleLike",
"ratingScaleDetect")) %>%
select(submissionID, trialName, pictureNumber, artist, date, response, color, color2) %>%
spread(key = trialName, value = response)
d$ratingScaleLike <- as.numeric(d$ratingScaleLike)
d$ratingScaleDetect <- as.numeric(d$ratingScaleDetect)
d = rename(d, detectability = ratingScaleDetect, liking = ratingScaleLike)
glimpse(d)
d_tibble <- as_tibble(d)
print(d_tibble)
ggplot(d, aes(x = detectability, y = liking, group = submissionID)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Detectability", y = "Liking")
ggplot(d, aes(x = detectability, y = liking)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Detectability", y = "Liking")
ggplot(d, aes(x = detectability, y = liking, group = detectability)) + geom_boxplot() + labs(x = "Detectability", y = "Liking")
d %>% group_by(liking) %>% summarise(meanDetect = mean(detectability))
d %>% group_by(detectability) %>% summarise(meanLike = mean(liking))
d %>% group_by(artist) %>% summarise(meanLike = mean(liking), meanDetect = mean(detectability))
raw_data = read_csv("results70.csv")
glimpse(raw_data)
data = rename(raw_data,
submissionID = `submission_id`,
trialName = `trial_name`
)
glimpse(data)
data = select(data, submissionID, trialName,
response, pictureNumber, artist, date,
age, gender, timeSpent, color, color2)
glimpse(data)
data_ex <- data
for(i in 1:(nrow(data) / 245)) {
# colorVisionTest1
if(data[((i - 1)*245 + 1), ]$response != "74") {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 1), ]$submissionID)
# colorVisionTest2
} else if(data[((i - 1)*245 + 2), ]$response != "7") {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 2), ]$submissionID)
# visionTest
} else if(data[((i - 1)*245 + 3), ]$response != "FELOPZD") {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 3), ]$submissionID)
# expertise
} else if(as.integer(data[((i - 1)*245 + 244), ]$response) > 5) {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 244), ]$submissionID)
# time spent
} else if(data[((i - 1)*245 + 1), ]$timeSpent < 5) {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 1), ]$submissionID)
# exclude participants that took part in the course Experimental Psychology Lab
} else if(data[((i - 1)*245 + 245), ]$response == "Yes") {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 245), ]$submissionID)
}
}
glimpse(data_ex)
data_ex %>% summarise(meanAge = mean(na.exclude(age)))
gender_distribution = count(data_ex, gender)
gender_distribution$n =  gender_distribution$n / 245
print(c("Age range: ", range(na.exclude(data_ex$age))))
participants = nrow(data) / 245
participants_valid = nrow(data_ex) / 245
print(gender_distribution)
print(c("Total number of participants: ", participants))
print(c("Number of valid participants: ", participants_valid))
data_ex %>% summarise(meanAge = mean(na.exclude(age)))
gender_distribution = count(data_ex, gender)
gender_distribution$n =  gender_distribution$n / 245
print(c("Age range: ", range(na.exclude(data_ex$age))))
participants = nrow(data) / 245
participants_valid = nrow(data_ex) / 245
print(gender_distribution)
print(c("Total number of participants: ", participants))
print(c("Number of valid participants: ", participants_valid))
languageD = count(raw_data, languages)
languageD$n =  languageD$n / 245
data_ex %>% summarise(meanAge = mean(na.exclude(age)))
gender_distribution = count(data_ex, gender)
gender_distribution$n =  gender_distribution$n / 245
print(c("Age range: ", range(na.exclude(data_ex$age))))
participants = nrow(data) / 245
participants_valid = nrow(data_ex) / 245
print(gender_distribution)
print(c("Total number of participants: ", participants))
print(c("Number of valid participants: ", participants_valid))
languageD = count(raw_data, languages)
languageD$n =  languageD$n / 245
print(languageD)
raw_data = read_csv("results70.csv")
glimpse(raw_data)
data_ex %>% summarise(meanAge = mean(na.exclude(age)))
gender_distribution = count(data_ex, gender)
gender_distribution$n =  gender_distribution$n / 245
print(c("Age range: ", range(na.exclude(data_ex$age))))
participants = nrow(data) / 245
participants_valid = nrow(data_ex) / 245
print(gender_distribution)
print(c("Total number of participants: ", participants))
print(c("Number of valid participants: ", participants_valid))
languageD = count(raw_data, languages)
languageD$n =  languageD$n / 245
print(languageD)
d = filter(data_ex, trialName %in% c("ratingScaleLike",
"ratingScaleDetect")) %>%
select(submissionID, trialName, pictureNumber, artist, date, response, color, color2) %>%
spread(key = trialName, value = response)
d$ratingScaleLike <- as.numeric(d$ratingScaleLike)
d$ratingScaleDetect <- as.numeric(d$ratingScaleDetect)
d = rename(d, detectability = ratingScaleDetect, liking = ratingScaleLike)
glimpse(d)
d_tibble <- as_tibble(d)
print(d_tibble)
ggplot(d, aes(x = detectability, y = liking, group = submissionID)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Detectability", y = "Liking")
ggplot(d, aes(x = detectability, y = liking)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Detectability", y = "Liking")
ggplot(d, aes(x = detectability, y = liking, group = detectability)) + geom_boxplot() + labs(x = "Detectability", y = "Liking")
d %>% group_by(liking) %>% summarise(meanDetect = mean(detectability))
d %>% group_by(detectability) %>% summarise(meanLike = mean(liking))
d %>% group_by(artist) %>% summarise(meanLike = mean(liking), meanDetect = mean(detectability))
ggplot(d, aes(x = detectability, y = liking, fill = artist)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Detectability", y = "Liking", title = "Different artists", fill = "Artist")
ggplot(d, aes(x = as.factor(detectability), y = liking, fill = artist)) + geom_boxplot()  + labs(x = "Detectability", y = "Liking", title = "Different artists", fill = "Artist")
ggplot(d, aes(x = detectability, y = liking, fill = color2)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Detectability", y = "Liking", title = "Different colors", fill = "Color")
ggplot(d, aes(x = as.factor(detectability), y = liking, fill = color2)) + geom_boxplot() + labs(x = "Detectability", y = "Liking", title = "Different colors", fill = "Color")
data_ex = select(data, submissionID, trialName,
response, pictureNumber, artist, date,
age, gender, timeSpent, color, color2)
glimpse(data)
data_ex %>% summarise(meanAge = mean(na.exclude(age)))
gender_distribution = count(data_ex, gender)
gender_distribution$n =  gender_distribution$n / 245
print(c("Age range: ", range(na.exclude(data_ex$age))))
participants = nrow(data) / 245
participants_valid = nrow(data_ex) / 245
print(gender_distribution)
print(c("Total number of participants: ", participants))
print(c("Number of valid participants: ", participants_valid))
# just for me to know
languageD = count(raw_data, languages)
languageD$n =  languageD$n / 245
print(languageD)
d = filter(data_ex, trialName %in% c("ratingScaleLike",
"ratingScaleDetect")) %>%
select(submissionID, trialName, pictureNumber, artist, date, response, color, color2) %>%
spread(key = trialName, value = response)
d$ratingScaleLike <- as.numeric(d$ratingScaleLike)
d$ratingScaleDetect <- as.numeric(d$ratingScaleDetect)
d = rename(d, detectability = ratingScaleDetect, liking = ratingScaleLike)
glimpse(d)
d_tibble <- as_tibble(d)
print(d_tibble)
ggplot(d, aes(x = detectability, y = liking, group = submissionID)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Detectability", y = "Liking")
ggplot(d, aes(x = detectability, y = liking)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Detectability", y = "Liking")
ggplot(d, aes(x = detectability, y = liking, group = detectability)) + geom_boxplot() + labs(x = "Detectability", y = "Liking")
d = mutate(d,
liking = factor(liking, ordered = T),
detectability = factor(detectability, ordered = T),
color = factor(color),
color2 = factor(color2),
artist = factor(artist)
)
glimpse(d)
cor(as.numeric(d$liking), as.numeric(d$detectability))
data = select(data, submissionID, trialName,
response, pictureNumber, artist, date,
age, gender, timeSpent, color, color2)
glimpse(data)
data_ex <- data
for(i in 1:(nrow(data) / 245)) {
# colorVisionTest1
if(data[((i - 1)*245 + 1), ]$response != "74") {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 1), ]$submissionID)
# colorVisionTest2
} else if(data[((i - 1)*245 + 2), ]$response != "7") {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 2), ]$submissionID)
# visionTest
} else if(data[((i - 1)*245 + 3), ]$response != "FELOPZD") {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 3), ]$submissionID)
# expertise
} else if(as.integer(data[((i - 1)*245 + 244), ]$response) > 5) {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 244), ]$submissionID)
# time spent
} else if(data[((i - 1)*245 + 1), ]$timeSpent < 5) {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 1), ]$submissionID)
# exclude participants that took part in the course Experimental Psychology Lab
} else if(data[((i - 1)*245 + 245), ]$response == "Yes") {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 245), ]$submissionID)
}
}
glimpse(data_ex)
data_ex %>% summarise(meanAge = mean(na.exclude(age)))
gender_distribution = count(data_ex, gender)
gender_distribution$n =  gender_distribution$n / 245
print(c("Age range: ", range(na.exclude(data_ex$age))))
participants = nrow(data) / 245
participants_valid = nrow(data_ex) / 245
print(gender_distribution)
print(c("Total number of participants: ", participants))
print(c("Number of valid participants: ", participants_valid))
# just for me to know
languageD = count(raw_data, languages)
languageD$n =  languageD$n / 245
print(languageD)
d = filter(data_ex, trialName %in% c("ratingScaleLike",
"ratingScaleDetect")) %>%
select(submissionID, trialName, pictureNumber, artist, date, response, color, color2) %>%
spread(key = trialName, value = response)
d$ratingScaleLike <- as.numeric(d$ratingScaleLike)
d$ratingScaleDetect <- as.numeric(d$ratingScaleDetect)
d = rename(d, detectability = ratingScaleDetect, liking = ratingScaleLike)
glimpse(d)
ggplot(d, aes(x = detectability, y = liking, group = submissionID)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Detectability", y = "Liking")
ggplot(d, aes(x = detectability, y = liking)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Detectability", y = "Liking")
ggplot(d, aes(x = detectability, y = liking, group = detectability)) + geom_boxplot() + labs(x = "Detectability", y = "Liking")
d = mutate(d,
liking = factor(liking, ordered = T),
detectability = factor(detectability, ordered = T),
color = factor(color),
color2 = factor(color2),
artist = factor(artist)
)
glimpse(d)
cor(as.numeric(d$liking), as.numeric(d$detectability))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rstan)
# set cores to use to the total number of cores (minimally 4)
options(mc.cores = max(parallel::detectCores(), 4))
# save a compiled version of the Stan model file
rstan_options(auto_write = TRUE)
library(brms)
# install faintr with devtools::install_github('michael-franke/bayes_mixed_regression_tutorial/faintr', build_vignettes = TRUE)
library(faintr)
set.seed(123)
raw_data = read_csv("results84.csv")
glimpse(raw_data)
data = rename(raw_data,
submissionID = `submission_id`,
trialName = `trial_name`
)
glimpse(data)
data = rename(raw_data,
submissionID = `submission_id`,
trialName = `trial_name`
)
glimpse(data)
data = select(data, submissionID, trialName,
response, pictureNumber, artist, date,
age, gender, timeSpent, color, color2)
glimpse(data)
data_ex <- data
for(i in 1:(nrow(data) / 245)) {
# colorVisionTest1
if(data[((i - 1)*245 + 1), ]$response != "74") {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 1), ]$submissionID)
# colorVisionTest2
} else if(data[((i - 1)*245 + 2), ]$response != "7") {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 2), ]$submissionID)
# visionTest
} else if(data[((i - 1)*245 + 3), ]$response != "FELOPZD") {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 3), ]$submissionID)
# expertise
} else if(as.integer(data[((i - 1)*245 + 244), ]$response) > 5) {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 244), ]$submissionID)
# time spent
} else if(data[((i - 1)*245 + 1), ]$timeSpent < 5) {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 1), ]$submissionID)
# exclude participants that took part in the course Experimental Psychology Lab
} else if(data[((i - 1)*245 + 245), ]$response == "Yes") {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 245), ]$submissionID)
}
}
glimpse(data_ex)
data_ex %>% summarise(meanAge = mean(na.exclude(age)))
gender_distribution = count(data_ex, gender)
gender_distribution$n =  gender_distribution$n / 245
print(c("Age range: ", range(na.exclude(data_ex$age))))
participants = nrow(data) / 245
participants_valid = nrow(data_ex) / 245
print(gender_distribution)
print(c("Total number of participants: ", participants))
print(c("Number of valid participants: ", participants_valid))
# just for me to know
languageD = count(raw_data, languages)
languageD$n =  languageD$n / 245
print(languageD)
d = filter(data_ex, trialName %in% c("ratingScaleLike",
"ratingScaleDetect")) %>%
select(submissionID, trialName, pictureNumber, artist, date, response, color, color2) %>%
spread(key = trialName, value = response)
d$ratingScaleLike <- as.numeric(d$ratingScaleLike)
d$ratingScaleDetect <- as.numeric(d$ratingScaleDetect)
d = rename(d, detectability = ratingScaleDetect, liking = ratingScaleLike)
glimpse(d)
d_tibble <- as_tibble(d)
print(d_tibble)
ggplot(d, aes(x = detectability, y = liking, group = submissionID)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Detectability", y = "Liking")
ggplot(d, aes(x = detectability, y = liking)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Detectability", y = "Liking")
ggplot(d, aes(x = detectability, y = liking, group = detectability)) + geom_boxplot() + labs(x = "Detectability", y = "Liking")
d %>% group_by(liking) %>% summarise(meanDetect = mean(detectability))
d %>% group_by(detectability) %>% summarise(meanLike = mean(liking))
d %>% group_by(artist) %>% summarise(meanLike = mean(liking), meanDetect = mean(detectability))
ggplot(d, aes(x = detectability, y = liking, fill = artist)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Detectability", y = "Liking", title = "Different artists", fill = "Artist")
ggplot(d, aes(x = as.factor(detectability), y = liking, fill = artist)) + geom_boxplot()  + labs(x = "Detectability", y = "Liking", title = "Different artists", fill = "Artist")
ggplot(d, aes(x = detectability, y = liking, fill = color2)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Detectability", y = "Liking", title = "Different colors", fill = "Color")
ggplot(d, aes(x = as.factor(detectability), y = liking, fill = color2)) + geom_boxplot() + labs(x = "Detectability", y = "Liking", title = "Different colors", fill = "Color")
d %>% group_by(color2) %>% summarise(meanLike = mean(liking), meanDetect = mean(detectability))
d %>% group_by(color2) %>% summarise(meanLike = mean(liking))
d = mutate(d,
liking = factor(liking, ordered = T),
detectability = factor(detectability, ordered = T),
color = factor(color),
color2 = factor(color2),
artist = factor(artist)
)
glimpse(d)
cor(as.numeric(d$liking), as.numeric(d$detectability))
raw_data = read_csv("results84.csv")
glimpse(raw_data)
raw_data = read_csv("results84.csv")
glimpse(raw_data)
view(as.tibble(raw_data))
data_ex = rename(raw_data,
submissionID = `submission_id`,
trialName = `trial_name`
)
glimpse(data)
data = rename(raw_data,
submissionID = `submission_id`,
trialName = `trial_name`
)
glimpse(data)
data_ex = select(data, submissionID, trialName,
response, pictureNumber, artist, date,
age, gender, timeSpent, color, color2)
glimpse(data)
data_ex %>% summarise(meanAge = mean(na.exclude(age)))
gender_distribution = count(data_ex, gender)
gender_distribution$n =  gender_distribution$n / 245
print(c("Age range: ", range(na.exclude(data_ex$age))))
participants = nrow(data) / 245
participants_valid = nrow(data_ex) / 245
print(gender_distribution)
print(c("Total number of participants: ", participants))
print(c("Number of valid participants: ", participants_valid))
# just for me to know
languageD = count(raw_data, languages)
languageD$n =  languageD$n / 245
print(languageD)
d = filter(data_ex, trialName %in% c("ratingScaleLike",
"ratingScaleDetect")) %>%
select(submissionID, trialName, pictureNumber, artist, date, response, color, color2) %>%
spread(key = trialName, value = response)
d$ratingScaleLike <- as.numeric(d$ratingScaleLike)
d$ratingScaleDetect <- as.numeric(d$ratingScaleDetect)
d = rename(d, detectability = ratingScaleDetect, liking = ratingScaleLike)
glimpse(d)
d_tibble <- as_tibble(d)
print(d_tibble)
ggplot(d, aes(x = detectability, y = liking, group = submissionID)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Detectability", y = "Liking")
ggplot(d, aes(x = detectability, y = liking)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Detectability", y = "Liking")
ggplot(d, aes(x = detectability, y = liking, group = detectability)) + geom_boxplot() + labs(x = "Detectability", y = "Liking")
d %>% group_by(detectability) %>% summarise(meanLike = mean(liking))
ggplot(d, aes(x = detectability, y = liking, fill = color2)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Detectability", y = "Liking", title = "Different colors", fill = "Color")
ggplot(d, aes(x = as.factor(detectability), y = liking, fill = color2)) + geom_boxplot() + labs(x = "Detectability", y = "Liking", title = "Different colors", fill = "Color")
d %>% group_by(color2) %>% summarise(meanLike = mean(liking))
cor(as.numeric(d$liking), as.numeric(d$detectability))
raw_data = read_csv("results93.csv")
glimpse(raw_data)
data = rename(raw_data,
submissionID = `submission_id`,
trialName = `trial_name`
)
glimpse(data)
data = select(data, submissionID, trialName,
response, pictureNumber, artist, date,
age, gender, timeSpent, color, color2)
glimpse(data)
data_ex <- data
for(i in 1:(nrow(data) / 245)) {
# colorVisionTest1
if(data[((i - 1)*245 + 1), ]$response != "74") {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 1), ]$submissionID)
# colorVisionTest2
} else if(data[((i - 1)*245 + 2), ]$response != "7") {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 2), ]$submissionID)
# visionTest
} else if(data[((i - 1)*245 + 3), ]$response != "FELOPZD") {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 3), ]$submissionID)
# expertise
} else if(as.integer(data[((i - 1)*245 + 244), ]$response) > 5) {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 244), ]$submissionID)
# time spent
} else if(data[((i - 1)*245 + 1), ]$timeSpent < 5) {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 1), ]$submissionID)
# exclude participants that took part in the course Experimental Psychology Lab
} else if(data[((i - 1)*245 + 245), ]$response == "Yes") {
data_ex = filter(data_ex, submissionID != data[((i - 1)*245 + 245), ]$submissionID)
}
}
glimpse(data_ex)
data_ex %>% summarise(meanAge = mean(na.exclude(age)))
gender_distribution = count(data_ex, gender)
gender_distribution$n =  gender_distribution$n / 245
print(c("Age range: ", range(na.exclude(data_ex$age))))
participants = nrow(data) / 245
participants_valid = nrow(data_ex) / 245
print(gender_distribution)
print(c("Total number of participants: ", participants))
print(c("Number of valid participants: ", participants_valid))
# just for me to know
languageD = count(raw_data, languages)
languageD$n =  languageD$n / 245
print(languageD)
d = filter(data_ex, trialName %in% c("ratingScaleLike",
"ratingScaleDetect")) %>%
select(submissionID, trialName, pictureNumber, artist, date, response, color, color2) %>%
spread(key = trialName, value = response)
d$ratingScaleLike <- as.numeric(d$ratingScaleLike)
d$ratingScaleDetect <- as.numeric(d$ratingScaleDetect)
d = rename(d, detectability = ratingScaleDetect, liking = ratingScaleLike)
glimpse(d)
d_tibble <- as_tibble(d)
print(d_tibble)
ggplot(d, aes(x = detectability, y = liking, group = submissionID)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Detectability", y = "Liking")
ggplot(d, aes(x = detectability, y = liking)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Detectability", y = "Liking")
ggplot(d, aes(x = detectability, y = liking, group = detectability)) + geom_boxplot() + labs(x = "Detectability", y = "Liking")
d %>% group_by(liking) %>% summarise(meanDetect = mean(detectability))
d %>% group_by(detectability) %>% summarise(meanLike = mean(liking))
d %>% group_by(artist) %>% summarise(meanLike = mean(liking), meanDetect = mean(detectability))
ggplot(d, aes(x = detectability, y = liking, fill = artist)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Detectability", y = "Liking", title = "Different artists", fill = "Artist")
ggplot(d, aes(x = as.factor(detectability), y = liking, fill = artist)) + geom_boxplot()  + labs(x = "Detectability", y = "Liking", title = "Different artists", fill = "Artist")
ggplot(d, aes(x = detectability, y = liking, fill = color2)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Detectability", y = "Liking", title = "Different colors", fill = "Color")
ggplot(d, aes(x = as.factor(detectability), y = liking, fill = color2)) + geom_boxplot() + labs(x = "Detectability", y = "Liking", title = "Different colors", fill = "Color")
d %>% group_by(color2) %>% summarise(meanLike = mean(liking))
cor(as.numeric(d$liking), as.numeric(d$detectability))
